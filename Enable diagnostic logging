There are built in diagnostics to assist with debugging an App Service app: In here you will learn how to enable diagnostic logging and add instrumentation to your application, and how to access the information logged by Azure
Below shows the types of logging, the platforms supported, and where the logs can be stored and located for accessing the info
Type / Platform / Location / Description
Application logging / Windows & Lunux / App service file system and/or Azure Storage blobs / Logs messages generated by your application code. The messages can be generated by the web framework you choose, or form your application code directly using the standard logging pattern of your language. Each message is assigned one of the following categories: Critical, Error, Warning, info, Debug, and Trace
Web server logging / Windows / App Service file systems or Azure Storage blobs / Raw HTTP request data in the W3C extended log file format. Each log message includes data like the HTTP method, resource URL, client IP, client port, user agent, response code, etc
Detailed error logging / Windows ? App Service file system / Copies of the .html error pages that would have been sent to the client browser. For security reasons, detailed error pages shouldn't be sent to clients in production, but App service can save the error page each time an application error page each time an application error occurs that has HTTP code 400 or greater
Failed request tracing / Windows / App Service file system / Detailed tracing info on failed requests, including a trace of the IIS components used to process the request and the time taken in each component. One folder is generated for each failed request, which contains the XML log file, and the XSL stylesheet to view the log file with
Deployment logging / Windows, Linux / App Service file system / Helps determine why a deployment failed. Deployemnt logging happens automatically and there are no configurable settings for deployemnt logging
ENABLE APPLICATION LOGGING (WINDOWS):
1. To enable app. logging for Windows apps in the Azure portal navigate to your app and select App Service logs
2. Select On for either App. Logging (Filesystem) or Applicayion Logging (Blob), or both. The filesystem option is for temporary debugging purpose, and turns itself off in 12 hrs. The Blob option is for long-term logging, and needs a blob storage container to write logs to
3. You can also set the Level of details included in the log as shows in the table below
Level 	Included categories
Disabled  	None
Error 	Error, Critical
Warning 	Warning, Error, Critical
Information	  Info, Warning, Error, Critical
Verbose 	Trace, Debug, Info, Warning, Error, Critical (all categories)
4. When finished press Save
ENABLE WEB SERVER LOGGING:
1. For Web server logging, select Storage to store logs on blob storage, or File System to store logs on the App service file system
2. In Retention period (Days), set the number of days the logs should be retained
3. When finished, select Save
ADD LOG MESSAGES IN CODE:
In your app code, you use the usual logging facilities to send log messages to the application logs
For Example: ASP.NET applications can use the System.Diagnostics.Trace class to log information to the application diagnostics log
C# : System.Diagnostics.Trace.TraceError("If you're seeing this, something bad happened");
By default, ASP.NET Core uses the Microsoft.Extensions.Logging.AzureAppServices logging proider
STREAM LOGS: 
Before you stream logs in real time, enable the log type that you want. Any information written to files ending in .txt, .log, or .htm that are stored in the /LogFiles directory (d:/home/logfiles) is streamed by App Service
  ~Azure portal: To stream logs in the Azure portal, navigate to your app and select Log stream
  ~Azure CLI: To stream log live in Cloud koShell, use the following command: az webapp log tail --name appname --resource-group myResourceGroup
  ~local console: To stream logs in the local console, install azure CLI and sign in to your acc. Once signed in, follow the instructions for Azure CLI above
ACCESS LOG FILES:
-If you configure the Azure Storage blobs option for log type, you need a client tool that works with Azure Storage
-For log stored in the App Service file system, the easiest way to download the Zip file in the browser at
  -Linus/container apps: https://<app-name>.scm.azurewebsites.net/api/logs/docker/zip
    For Linux/container apps. the Zip file contains console output logs for both the docker host and the docker container.
  -Windows: https://<app-name>.scm.azurewebsites.net/api/dump
 For a scaled out app, the Zip file contains one set of logs for each instance. In the App Service file system, these log files are the contents of the /home/LogFiles directory 
